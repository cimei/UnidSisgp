# flask.cfg

import urllib
import os

# Definindo a chave secreta
SECRET_KEY = 'achavesecretasecreta'

# variáveis de ambiente para acesso ao banco de dados
bd_server   = os.environ.get('DB_SERVER')
bd_port     = os.environ.get('DB_PORT')
bd_database = os.environ.get('DB_DATABASE')
bd_uid      = os.environ.get('DB_USER')
bd_pwd      = os.environ.get('DB_PWD')

# variáveis de ambiente para acesso ao servidor LDAP
str_conexao  = os.environ.get('STR_CONEXAO')
str_search   = os.environ.get('STR_SEARCH')
str_atributo = os.environ.get('STR_ATRIBUTO')

ldap_url = os.environ.get('LDAP_URL')

LDAP_PROVIDER_URL = ldap_url
LDAP_PROTOCOL_VERSION = 3

# condição "chefe_não_pode_remoto" se existir no órgão
condic = os.environ.get('CONDIC')

# string de acesso ao banco SQL Sever via FreeTDS
params = urllib.parse.quote_plus("DRIVER={FreeTDS};\
                                  SERVER="+ bd_server +";\
                                  PORT=" + bd_port + ";\
                                  DATABASE="+ bd_database +";\
                                  UID="+bd_uid+";PWD="+bd_pwd)

SQLALCHEMY_DATABASE_URI = "mssql+pyodbc:///?odbc_connect=%s" % params

SQLALCHEMY_TRACK_MODIFICATIONS = False

# trocar para True quando em depuração
DEBUG = False
#DEBUG = True

